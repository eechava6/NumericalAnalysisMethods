function cuadraticSpline(x,y)
	if(length(x) different to length(y))
		return err
	n = length(x)
	m = 4*(n-1)
	A = matrixZeros(m,m)
	b = matrixZeros(m,1)

	A(0,0-4) = x(0)^3,x(0)^2,x(0),1
	b(0) = y(0)
	
	for i in (1,n)
		A(i)(4*i-4:4*i) = x(i)^3, x(i)^2, x(i) ,1
		b(i) = y(i)
		
	for i in (1,n-1)
		A(n-1+i)(4*i-4:4*i+4) = x(i)^3,x(i)^2, x(i), 1 ,-x(i)^3, -x(i)^2, -x(i) , -1
	
	for i in (1,n-1)
		A(2*n-3+i)(4*i-4:4*i+4) = 3x(i)^2,2x(i), 1, 0 ,-3x(i)^2, -2x(i), -1 , 0
	
	for i in (1, n-1)
		A(3*n-5+i)(4*i-4:4*val+4) = 6x(i), 2, 0,0, -6x(i), -2, 0 ,0 

	A(m-1,0) = 2
	A(m-1)(m-4:m-4+2) = 6x(n-1), 2

	values = gaussPartial(A,b)
	for i in (0,length(values)-3, i+=4)
		pols += vals(i)x^3 + vals(i+1)x^2+ vals(i+2)x + vals(i+3)
		 
	return pols